From 2c0aa618a6c058220755b277405665bc9757332f Mon Sep 17 00:00:00 2001
From: Jakub Skowron <jakubskowron676@gmail.com>
Date: Wed, 25 Jun 2025 13:20:11 +0200
Subject: [PATCH] Allow tags to have a different color

---
 config.def.h | 20 ++++++++++++++++++--
 dwm.c        | 19 ++++++++++++++++---
 2 files changed, 34 insertions(+), 5 deletions(-)

diff --git a/config.def.h b/config.def.h
index 9efa774..3f37acc 100644
--- a/config.def.h
+++ b/config.def.h
@@ -7,6 +7,7 @@ static const int showbar            = 1;        /* 0 means no bar */
 static const int topbar             = 1;        /* 0 means bottom bar */
 static const char *fonts[]          = { "monospace:size=10" };
 static const char dmenufont[]       = "monospace:size=10";
+static const unsigned int colorfultags = 1; /* 0 means use SchemeSel for selected tag */
 static const char col_gray1[]       = "#222222";
 static const char col_gray2[]       = "#444444";
 static const char col_gray3[]       = "#bbbbbb";
@@ -14,12 +15,26 @@ static const char col_gray4[]       = "#eeeeee";
 static const char col_cyan[]        = "#005577";
 static const char *colors[][3]      = {
 	/*               fg         bg         border   */
-	[SchemeNorm] = { col_gray3, col_gray1, col_gray2 },
-	[SchemeSel]  = { col_gray4, col_cyan,  col_cyan  },
+	[SchemeNorm]   = { col_gray3,      col_gray1, col_gray2 },
+	[SchemeSel]    = { col_gray4,      col_cyan,  col_cyan  },
+    [SchemeTag]    = { col_br_black,   col_bg,    col_black },
+    [SchemeTag1]   = { col_fg,         col_dark,  col_black },
+    [SchemeTag2]   = { col_red,        col_dark,  col_black },
+    [SchemeTag3]   = { col_br_yellow,  col_dark,  col_black },
+    [SchemeTag4]   = { col_br_blue,    col_dark,  col_black },
+    [SchemeTag5]   = { col_br_magenta, col_dark,  col_black },
+    [SchemeTag6]   = { col_br_cyan,    col_dark,  col_black },
+    [SchemeTag7]   = { col_br_green,   col_dark,  col_black },
+    [SchemeTag8]   = { col_yellow,     col_dark,  col_black },
+    [SchemeTag9]   = { col_br_red,     col_dark,  col_black },
+    [SchemeLayout] = { col_white,      col_bg,    col_black }
 };
 
 /* tagging */
 static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
+static const int tagschemes[] = { SchemeTag1, SchemeTag2, SchemeTag3,
+                                  SchemeTag4, SchemeTag5, SchemeTag6,
+                                  SchemeTag7, SchemeTag8, SchemeTag9 };
 
 static const Rule rules[] = {
 	/* xprop(1):
@@ -95,6 +110,7 @@ static const Key keys[] = {
 	TAGKEYS(                        XK_8,                      7)
 	TAGKEYS(                        XK_9,                      8)
 	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
+    { MODKEY|ShiftMask,             XK_t,      togglecolorfultags, {0} }
 };
 
 /* button definitions */
diff --git a/dwm.c b/dwm.c
index 1443802..649e542 100644
--- a/dwm.c
+++ b/dwm.c
@@ -58,7 +58,10 @@
 
 /* enums */
 enum { CurNormal, CurResize, CurMove, CurLast }; /* cursor */
-enum { SchemeNorm, SchemeSel }; /* color schemes */
+enum { SchemeNorm, SchemeSel,
+       SchemeTag, SchemeTag1, SchemeTag2, SchemeTag3,
+       SchemeTag4, SchemeTag5, SchemeTag6, SchemeTag7,
+       SchemeTag8, SchemeTag9, SchemeLayout }; /* color schemes */
 enum { NetSupported, NetWMName, NetWMState, NetWMCheck,
        NetWMFullscreen, NetActiveWindow, NetWMWindowType,
        NetWMWindowTypeDialog, NetClientList, NetLast }; /* EWMH atoms */
@@ -123,6 +126,7 @@ struct Monitor {
 	unsigned int tagset[2];
 	int showbar;
 	int topbar;
+    unsigned int colorfultags;
 	Client *clients;
 	Client *sel;
 	Client *stack;
@@ -209,6 +213,7 @@ static void tag(const Arg *arg);
 static void tagmon(const Arg *arg);
 static void tile(Monitor *m);
 static void togglebar(const Arg *arg);
+static void togglecolorfultags();
 static void togglefloating(const Arg *arg);
 static void toggletag(const Arg *arg);
 static void toggleview(const Arg *arg);
@@ -640,6 +645,7 @@ createmon(void)
 	m->nmaster = nmaster;
 	m->showbar = showbar;
 	m->topbar = topbar;
+    m->colorfultags = colorfultags ? colorfultags : 0;
 	m->lt[0] = &layouts[0];
 	m->lt[1] = &layouts[1 % LENGTH(layouts)];
 	strncpy(m->ltsymbol, layouts[0].symbol, sizeof m->ltsymbol);
@@ -721,7 +727,7 @@ drawbar(Monitor *m)
 	x = 0;
 	for (i = 0; i < LENGTH(tags); i++) {
 		w = TEXTW(tags[i]);
-		drw_setscheme(drw, scheme[m->tagset[m->seltags] & 1 << i ? SchemeSel : SchemeNorm]);
+        drw_setscheme(drw, scheme[m->tagset[m->seltags] & 1 << i ? (m->colorfultags ? tagschemes[i] : SchemeSel) : SchemeTag]);
 		drw_text(drw, x, 0, w, bh, lrpad / 2, tags[i], urg & 1 << i);
 		if (occ & 1 << i)
 			drw_rect(drw, x + boxs, boxs, boxw, boxw,
@@ -730,7 +736,7 @@ drawbar(Monitor *m)
 		x += w;
 	}
 	w = TEXTW(m->ltsymbol);
-	drw_setscheme(drw, scheme[SchemeNorm]);
+	drw_setscheme(drw, scheme[SchemeLayout]);
 	x = drw_text(drw, x, 0, w, bh, lrpad / 2, m->ltsymbol, 0);
 
 	if ((w = m->ww - tw - x) > bh) {
@@ -1720,6 +1726,13 @@ togglebar(const Arg *arg)
 	arrange(selmon);
 }
 
+void
+togglecolorfultags()
+{
+    selmon->colorfultags = !selmon->colorfultags;
+    drawbar(selmon);
+}
+
 void
 togglefloating(const Arg *arg)
 {
-- 
2.50.0

